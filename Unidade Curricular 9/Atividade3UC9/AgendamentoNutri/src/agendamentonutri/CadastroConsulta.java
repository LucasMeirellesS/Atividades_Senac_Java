package agendamentonutri;

import consulta.ListaConsulta;
import consulta.Consulta;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUCAS MEIRELLES
 */
public class CadastroConsulta extends javax.swing.JFrame{

    /**
     * Creates new form CadastroConsulta
     */
    public CadastroConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        checkPaciente = new javax.swing.JCheckBox();
        btnCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Cadastrar Consulta");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Nome do(a) paciênte: ");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("Telefone:");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("CPF:");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setText("Data da Consulta:");

        checkPaciente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        checkPaciente.setText("Já é paciente");

        btnCadastrar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkPaciente)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNome)
                            .addComponent(txtTelefone)
                            .addComponent(txtCpf)
                            .addComponent(txtData, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addComponent(btnCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkPaciente)
                .addGap(18, 18, 18)
                .addComponent(btnCadastrar)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        
        
        
        if(!emptyFields()){
            if(validar()){
                Consulta consulta = new Consulta();
                consulta.setPaciente(txtNome.getText());
                consulta.setCpf(txtCpf.getText());
                consulta.setTelefone(txtTelefone.getText());
                consulta.setData(txtData.getText());
                consulta.setStatus("Não");
                if(checkPaciente.isSelected()){
                    consulta.setJaPaciente("Sim");
                }

                else{
                    consulta.setJaPaciente("Não");
                }

                ListaConsulta.Adicionar(consulta);
                atualizaTelaInicial();
                JOptionPane.showMessageDialog(rootPane, "Os seguintes dados foram registrados:"+
                        "\nNome: "+consulta.getPaciente()
                            +"\nCPF: "+consulta.getCpf()
                            +"\nTelefone: "+consulta.getTelefone()
                            +"\nData: "+consulta.getData()
                            +"\nJá é paciente? "+consulta.getJaPaciente()
                            +"\nStatus: "+consulta.getStatus()
                );
                
                for(int i = 0; i < ListaConsulta.Listar().size(); i++){
                    System.out.println(ListaConsulta.Listar().get(i).getPaciente());
                }
                
                txtNome.setText("");
                txtCpf.setText(" ");
                txtTelefone.setText(" ");
                txtData.setText(" ");
                checkPaciente.setSelected(false);
                
                dispose();
            }
        }
        
        
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JCheckBox checkPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
    
    
    
    public boolean validar(){
        
        String data = txtData.getText();
        String cpf = txtCpf.getText();
        String telefone = txtTelefone.getText();
        boolean cpfVal = cpf.matches("[0-9]{3}.[0-9]{3}.[0-9]{3}-[0-9]{2}");
        boolean telefoneVal = telefone.matches("9"+"[0-9]{4}-[0-9]{4}|3"+"[0-9]{3}-[0-9]{4}");
        boolean dataVal = data.matches("[0-9]{2}/[0-9]{2}/[0-9]{4}");
        
        if(cpfVal == true & telefoneVal == true & dataVal == false){
            JOptionPane.showMessageDialog(rootPane, "Data está no formato incorreto!");
            return false;
        
        }
        
        else if(cpfVal == true & telefoneVal == false & dataVal == true){
            JOptionPane.showMessageDialog(rootPane, "Telefone está no formato incorreto!");
            return false;
        
        }
        
        
        else if(cpfVal == false & telefoneVal == true & dataVal == true){
            JOptionPane.showMessageDialog(rootPane, "CPF está no formato incorreto!");
            return false;
        
        }
        
        else if(cpfVal == false & telefoneVal == false & dataVal == true){
            JOptionPane.showMessageDialog(rootPane, "CPF e telefone estão no formato incorreto!");
            return false;
        
        }
        
        else if(cpfVal == false & telefoneVal == true & dataVal == false){
            JOptionPane.showMessageDialog(rootPane, "CPF e data estão no formato incorreto!");
            return false;
        
        }
        
        else if(cpfVal == true & telefoneVal == false & dataVal == false){
            JOptionPane.showMessageDialog(rootPane, "Data e telefone estão no formato incorreto!");
            return false;
        
        }
        
        else{
            return true;
        }
        
        
        
        
    }
    
    
   public boolean emptyFields(){
            
            boolean isEmpty = true;
            
            if(txtNome.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty() || txtData.getText().trim().isEmpty() || txtTelefone.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Não é possível inserir elementos vazios.");
            }
            
            else{
                isEmpty = false;
            }
            
            return isEmpty;
        
        }
    
   
     private TelaInicial telaI;
     
     public void MostraTela(TelaInicial telainicial){
         this.telaI = telainicial;
         setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
         setVisible(true);
     }
     
     public void atualizaTelaInicial(){
         telaI.executaMetodo();
     }
    
    
     
     
}
